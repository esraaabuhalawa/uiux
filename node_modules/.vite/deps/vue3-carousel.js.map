{
  "version": 3,
  "sources": ["../../vue3-carousel/dist/carousel.es.js"],
  "sourcesContent": ["/**\n * Vue 3 Carousel 0.8.1\n * (c) 2024\n * @license MIT\n */\nimport { Fragment, defineComponent, inject, reactive, ref, h, computed, provide, onMounted, nextTick, onUnmounted, watch, cloneVNode } from 'vue';\n\nconst SNAP_ALIGN_OPTIONS = ['center', 'start', 'end', 'center-even', 'center-odd'];\nconst BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'];\nconst DIR_OPTIONS = [\n    'ltr',\n    'left-to-right',\n    'rtl',\n    'right-to-left',\n    'ttb',\n    'top-to-bottom',\n    'btt',\n    'bottom-to-top',\n];\nconst I18N_DEFAULT_CONFIG = {\n    ariaNextSlide: 'Navigate to next slide',\n    ariaPreviousSlide: 'Navigate to previous slide',\n    ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n    ariaGallery: 'Gallery',\n    itemXofY: 'Item {currentSlide} of {slidesCount}',\n    iconArrowUp: 'Arrow pointing upwards',\n    iconArrowDown: 'Arrow pointing downwards',\n    iconArrowRight: 'Arrow pointing to the right',\n    iconArrowLeft: 'Arrow pointing to the left',\n};\nconst DEFAULT_CONFIG = {\n    enabled: true,\n    itemsToShow: 1,\n    itemsToScroll: 1,\n    modelValue: 0,\n    transition: 300,\n    autoplay: 0,\n    gap: 0,\n    height: 'auto',\n    wrapAround: false,\n    pauseAutoplayOnHover: false,\n    mouseDrag: true,\n    touchDrag: true,\n    snapAlign: SNAP_ALIGN_OPTIONS[0],\n    dir: DIR_OPTIONS[0],\n    breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n    breakpoints: undefined,\n    i18n: I18N_DEFAULT_CONFIG,\n};\n\nconst carouselProps = {\n    // enable/disable the carousel component\n    enabled: {\n        default: DEFAULT_CONFIG.enabled,\n        type: Boolean,\n    },\n    // count of items to showed per view\n    itemsToShow: {\n        default: DEFAULT_CONFIG.itemsToShow,\n        type: Number,\n    },\n    // count of items to be scrolled\n    itemsToScroll: {\n        default: DEFAULT_CONFIG.itemsToScroll,\n        type: Number,\n    },\n    // control infinite scrolling mode\n    wrapAround: {\n        default: DEFAULT_CONFIG.wrapAround,\n        type: Boolean,\n    },\n    // control the gap between slides\n    gap: {\n        default: DEFAULT_CONFIG.gap,\n        type: Number,\n    },\n    // control the gap between slides\n    height: {\n        default: DEFAULT_CONFIG.height,\n        type: [Number, String],\n    },\n    // control snap position alignment\n    snapAlign: {\n        default: DEFAULT_CONFIG.snapAlign,\n        validator(value) {\n            return SNAP_ALIGN_OPTIONS.includes(value);\n        },\n    },\n    // sliding transition time in ms\n    transition: {\n        default: DEFAULT_CONFIG.transition,\n        type: Number,\n    },\n    // controls the breakpoint mode relative to the carousel container or the viewport\n    breakpointMode: {\n        default: DEFAULT_CONFIG.breakpointMode,\n        validator(value) {\n            return BREAKPOINT_MODE_OPTIONS.includes(value);\n        },\n    },\n    // an object to store breakpoints\n    breakpoints: {\n        default: DEFAULT_CONFIG.breakpoints,\n        type: Object,\n    },\n    // time to auto advance slides in ms\n    autoplay: {\n        default: DEFAULT_CONFIG.autoplay,\n        type: Number,\n    },\n    // pause autoplay when mouse hover over the carousel\n    pauseAutoplayOnHover: {\n        default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n        type: Boolean,\n    },\n    // slide number number of initial slide\n    modelValue: {\n        default: undefined,\n        type: Number,\n    },\n    // toggle mouse dragging.\n    mouseDrag: {\n        default: DEFAULT_CONFIG.mouseDrag,\n        type: Boolean,\n    },\n    // toggle mouse dragging.\n    touchDrag: {\n        default: DEFAULT_CONFIG.touchDrag,\n        type: Boolean,\n    },\n    // control snap position alignment\n    dir: {\n        default: DEFAULT_CONFIG.dir,\n        validator(value) {\n            // The value must match one of these strings\n            return DIR_OPTIONS.includes(value);\n        },\n    },\n    // aria-labels and additional text labels\n    i18n: {\n        default: DEFAULT_CONFIG.i18n,\n        type: Object,\n    },\n};\n\n/**\n * Determines the maximum slide index based on the configuration.\n *\n * @param {Args} args - The carousel configuration and slide count.\n * @returns {number} The maximum slide index.\n */\nfunction getMaxSlideIndex({ config, slidesCount }) {\n    var _a;\n    const { snapAlign = 'N/A', wrapAround, itemsToShow = 1 } = config;\n    // If wrapAround is enabled, the max index is the last slide\n    if (wrapAround) {\n        return Math.max(slidesCount - 1, 0);\n    }\n    // Map snapAlign values to calculation logic\n    const snapAlignCalculations = {\n        start: Math.ceil(slidesCount - itemsToShow),\n        end: Math.ceil(slidesCount - 1),\n        center: slidesCount - Math.ceil((itemsToShow - 0.5) / 2),\n        'center-odd': slidesCount - Math.ceil((itemsToShow - 0.5) / 2),\n        'center-even': slidesCount - Math.ceil(itemsToShow / 2),\n    };\n    // Compute the max index based on snapAlign, or default to 0\n    const calculateMaxIndex = (_a = snapAlignCalculations[snapAlign]) !== null && _a !== void 0 ? _a : 0;\n    // Return the result ensuring it's non-negative\n    return Math.max(calculateMaxIndex, 0);\n}\n\n/**\n * Determines the minimum slide index based on the configuration.\n *\n * @param {Args} args - The carousel configuration and slide count.\n * @returns {number} The minimum slide index.\n */\nfunction getMinSlideIndex({ config, slidesCount }) {\n    var _a;\n    const { snapAlign = 'N/A', wrapAround, itemsToShow = 1 } = config;\n    // If wrapAround is enabled or itemsToShow exceeds slidesCount, the minimum index is always 0\n    if (wrapAround || itemsToShow > slidesCount) {\n        return 0;\n    }\n    // Map of snapAlign to offset calculations\n    const snapAlignCalculations = {\n        start: 0,\n        end: Math.floor(itemsToShow - 1),\n        center: Math.floor((itemsToShow - 1) / 2),\n        'center-odd': Math.floor((itemsToShow - 1) / 2),\n        'center-even': Math.floor((itemsToShow - 2) / 2),\n    };\n    // Return the calculated offset or default to 0 for invalid snapAlign values\n    return (_a = snapAlignCalculations[snapAlign]) !== null && _a !== void 0 ? _a : 0;\n}\n\nfunction getNumberInRange({ val, max, min }) {\n    if (max < min) {\n        return val;\n    }\n    return Math.min(Math.max(val, min), max);\n}\n\nconst calculateOffset = (snapAlign, itemsToShow) => {\n    var _a;\n    const offsetMap = {\n        start: 0,\n        center: (itemsToShow - 1) / 2,\n        'center-odd': (itemsToShow - 1) / 2,\n        'center-even': (itemsToShow - 2) / 2,\n        end: itemsToShow - 1,\n    };\n    return (_a = offsetMap[snapAlign]) !== null && _a !== void 0 ? _a : 0; // Fallback to 0 for unknown snapAlign\n};\nfunction getScrolledIndex({ config, currentSlide, slidesCount }) {\n    const { snapAlign = 'N/A', wrapAround, itemsToShow = 1 } = config;\n    // Calculate the offset based on snapAlign\n    const offset = calculateOffset(snapAlign, itemsToShow);\n    // Compute the index with or without wrapAround\n    if (!wrapAround) {\n        return getNumberInRange({\n            val: currentSlide - offset,\n            max: slidesCount - itemsToShow,\n            min: 0,\n        });\n    }\n    return currentSlide - offset;\n}\n\nfunction getSlidesVNodes(vNode) {\n    if (!vNode)\n        return [];\n    return vNode.reduce((acc, node) => {\n        var _a;\n        if (node.type === Fragment) {\n            return [...acc, ...getSlidesVNodes(node.children)];\n        }\n        if (((_a = node.type) === null || _a === void 0 ? void 0 : _a.name) === 'CarouselSlide') {\n            return [...acc, node];\n        }\n        return acc;\n    }, []);\n}\n\nfunction mapNumberToRange({ val, max, min = 0 }) {\n    const mod = max - min + 1;\n    return ((val - min) % mod + mod) % mod + min;\n}\n\n/**\n * return a throttle version of the function\n * Throttling\n *\n */\n// eslint-disable-next-line no-unused-vars\nfunction throttle(fn) {\n    let isRunning = false;\n    return function (...args) {\n        if (!isRunning) {\n            isRunning = true;\n            requestAnimationFrame(() => {\n                fn.apply(this, args);\n                isRunning = false;\n            });\n        }\n    };\n}\n\n/**\n * return a debounced version of the function\n * @param fn\n * @param delay\n */\n// eslint-disable-next-line no-unused-vars\nfunction debounce(fn, delay) {\n    let timerId;\n    return function (...args) {\n        if (timerId) {\n            clearTimeout(timerId);\n        }\n        timerId = setTimeout(() => {\n            fn(...args);\n            timerId = null;\n        }, delay);\n    };\n}\n\nfunction i18nFormatter(string = '', values = {}) {\n    return Object.entries(values).reduce((acc, [key, value]) => acc.replace(`{${key}}`, String(value)), string);\n}\n\nvar ARIAComponent = defineComponent({\n    name: 'ARIA',\n    setup() {\n        const config = inject('config', reactive(Object.assign({}, DEFAULT_CONFIG)));\n        const currentSlide = inject('currentSlide', ref(0));\n        const slidesCount = inject('slidesCount', ref(0));\n        return () => h('div', {\n            class: ['carousel__liveregion', 'carousel__sr-only'],\n            'aria-live': 'polite',\n            'aria-atomic': 'true',\n        }, i18nFormatter(config.i18n['itemXofY'], {\n            currentSlide: currentSlide.value + 1,\n            slidesCount: slidesCount.value,\n        }));\n    },\n});\n\nvar Carousel = defineComponent({\n    name: 'Carousel',\n    props: carouselProps,\n    emits: [\n        'init',\n        'drag',\n        'slide-start',\n        'loop',\n        'update:modelValue',\n        'slide-end',\n        'before-init',\n    ],\n    setup(props, { slots, emit, expose }) {\n        var _a;\n        const root = ref(null);\n        const viewport = ref(null);\n        const slides = ref([]);\n        const slideSize = ref(0);\n        const slidesCount = ref(0);\n        const fallbackConfig = computed(() => (Object.assign(Object.assign(Object.assign({}, DEFAULT_CONFIG), props), { i18n: Object.assign(Object.assign({}, DEFAULT_CONFIG.i18n), props.i18n), breakpoints: undefined })));\n        // current active config\n        const config = reactive(Object.assign({}, fallbackConfig.value));\n        // slides\n        const currentSlideIndex = ref((_a = props.modelValue) !== null && _a !== void 0 ? _a : 0);\n        const prevSlideIndex = ref(0);\n        const middleSlideIndex = ref(0);\n        const maxSlideIndex = ref(0);\n        const minSlideIndex = ref(0);\n        let autoplayTimer = null;\n        let transitionTimer = null;\n        let resizeObserver = null;\n        const effectiveSlideSize = computed(() => slideSize.value + config.gap);\n        const normalizeDir = computed(() => {\n            const dir = config.dir || 'lrt';\n            const dirMap = {\n                'left-to-right': 'ltr',\n                'right-to-left': 'rtl',\n                'top-to-bottom': 'ttb',\n                'bottom-to-top': 'btt',\n            };\n            return dirMap[dir] || dir;\n        });\n        const isVertical = computed(() => ['ttb', 'btt'].includes(normalizeDir.value));\n        provide('config', config);\n        provide('slidesCount', slidesCount);\n        provide('currentSlide', currentSlideIndex);\n        provide('maxSlide', maxSlideIndex);\n        provide('minSlide', minSlideIndex);\n        provide('slideSize', slideSize);\n        provide('isVertical', isVertical);\n        provide('normalizeDir', normalizeDir);\n        function updateBreakpointsConfig() {\n            var _a;\n            // Determine the width source based on the 'breakpointMode' config\n            const widthSource = (config.breakpointMode === 'carousel'\n                ? (_a = root.value) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().width\n                : window.innerWidth) || 0;\n            const breakpointsArray = Object.keys(props.breakpoints || {})\n                .map((key) => Number(key))\n                .sort((a, b) => +b - +a);\n            let newConfig = Object.assign({}, fallbackConfig.value);\n            breakpointsArray.some((breakpoint) => {\n                var _a;\n                if (widthSource >= breakpoint) {\n                    newConfig = Object.assign(Object.assign({}, newConfig), (_a = props.breakpoints) === null || _a === void 0 ? void 0 : _a[breakpoint]);\n                    return true;\n                }\n                return false;\n            });\n            Object.assign(config, newConfig);\n        }\n        const handleResize = debounce(() => {\n            updateBreakpointsConfig();\n            updateSlidesData();\n            updateSlideSize();\n        }, 16);\n        /**\n         * Setup functions\n         */\n        function updateSlideSize() {\n            if (!viewport.value)\n                return;\n            const rect = viewport.value.getBoundingClientRect();\n            // Calculate the total gap space\n            const totalGap = (config.itemsToShow - 1) * config.gap;\n            // Calculate size based on orientation\n            if (isVertical.value) {\n                slideSize.value = (rect.height - totalGap) / config.itemsToShow;\n            }\n            else {\n                slideSize.value = (rect.width - totalGap) / config.itemsToShow;\n            }\n        }\n        function updateSlidesData() {\n            if (slidesCount.value <= 0)\n                return;\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\n            maxSlideIndex.value = getMaxSlideIndex({ config, slidesCount: slidesCount.value });\n            minSlideIndex.value = getMinSlideIndex({ config, slidesCount: slidesCount.value });\n            if (!config.wrapAround) {\n                currentSlideIndex.value = getNumberInRange({\n                    val: currentSlideIndex.value,\n                    max: maxSlideIndex.value,\n                    min: minSlideIndex.value,\n                });\n            }\n        }\n        onMounted(() => {\n            nextTick(() => updateSlideSize());\n            // Overcome some edge cases\n            setTimeout(() => updateSlideSize(), 1000);\n            updateBreakpointsConfig();\n            initAutoplay();\n            window.addEventListener('resize', handleResize, { passive: true });\n            resizeObserver = new ResizeObserver(handleResize);\n            if (root.value) {\n                resizeObserver.observe(root.value);\n            }\n            emit('init');\n        });\n        onUnmounted(() => {\n            if (transitionTimer) {\n                clearTimeout(transitionTimer);\n            }\n            if (autoplayTimer) {\n                clearInterval(autoplayTimer);\n            }\n            if (resizeObserver && root.value) {\n                resizeObserver.unobserve(root.value);\n                resizeObserver = null;\n            }\n            window.removeEventListener('resize', handleResize, {\n                passive: true,\n            });\n        });\n        /**\n         * Carousel Event listeners\n         */\n        let isTouch = false;\n        const startPosition = { x: 0, y: 0 };\n        const dragged = reactive({ x: 0, y: 0 });\n        const isHover = ref(false);\n        const isDragging = ref(false);\n        const handleMouseEnter = () => {\n            isHover.value = true;\n        };\n        const handleMouseLeave = () => {\n            isHover.value = false;\n        };\n        function handleDragStart(event) {\n            // Prevent drag initiation on input elements or if already sliding\n            const targetTagName = event.target.tagName;\n            if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || isSliding.value) {\n                return;\n            }\n            // Detect if the event is a touchstart or mousedown event\n            isTouch = event.type === 'touchstart';\n            // For mouse events, prevent default to avoid text selection\n            if (!isTouch) {\n                event.preventDefault();\n                if (event.button !== 0) {\n                    // Ignore non-left-click mouse events\n                    return;\n                }\n            }\n            // Initialize start positions for the drag\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\n            // Attach event listeners for dragging and drag end\n            const moveEvent = isTouch ? 'touchmove' : 'mousemove';\n            const endEvent = isTouch ? 'touchend' : 'mouseup';\n            document.addEventListener(moveEvent, handleDragging, { passive: false });\n            document.addEventListener(endEvent, handleDragEnd, { passive: true });\n        }\n        const handleDragging = throttle((event) => {\n            isDragging.value = true;\n            // Get the current position based on the interaction type (touch or mouse)\n            const currentX = isTouch ? event.touches[0].clientX : event.clientX;\n            const currentY = isTouch ? event.touches[0].clientY : event.clientY;\n            // Calculate deltas for X and Y axes\n            const deltaX = currentX - startPosition.x;\n            const deltaY = currentY - startPosition.y;\n            // Update dragged state reactively\n            dragged.x = deltaX;\n            dragged.y = deltaY;\n            // Emit a drag event for further customization if needed\n            emit('drag', { deltaX, deltaY });\n        });\n        function handleDragEnd() {\n            // Determine the active axis and direction multiplier\n            const dragAxis = isVertical.value ? 'y' : 'x';\n            const directionMultiplier = ['rtl', 'btt'].includes(normalizeDir.value) ? -1 : 1;\n            // Calculate dragged slides with a tolerance to account for incomplete drags\n            const tolerance = Math.sign(dragged[dragAxis]) * 0.4; // Smooth out small drags\n            const draggedSlides = Math.round(dragged[dragAxis] / effectiveSlideSize.value + tolerance) *\n                directionMultiplier;\n            // Prevent accidental clicks when there is a slide drag\n            if (draggedSlides && !isTouch) {\n                const preventClick = (e) => {\n                    e.preventDefault();\n                    window.removeEventListener('click', preventClick);\n                };\n                window.addEventListener('click', preventClick);\n            }\n            // Slide to the appropriate slide index\n            const targetSlideIndex = currentSlideIndex.value - draggedSlides;\n            slideTo(targetSlideIndex);\n            // Reset drag state\n            dragged.x = 0;\n            dragged.y = 0;\n            isDragging.value = false;\n            const moveEvent = isTouch ? 'touchmove' : 'mousemove';\n            const endEvent = isTouch ? 'touchend' : 'mouseup';\n            document.removeEventListener(moveEvent, handleDragging);\n            document.removeEventListener(endEvent, handleDragEnd);\n        }\n        /**\n         * Autoplay\n         */\n        function initAutoplay() {\n            if (!config.autoplay || config.autoplay <= 0) {\n                return;\n            }\n            autoplayTimer = setInterval(() => {\n                if (config.pauseAutoplayOnHover && isHover.value) {\n                    return;\n                }\n                next();\n            }, config.autoplay);\n        }\n        function resetAutoplay() {\n            if (autoplayTimer) {\n                clearInterval(autoplayTimer);\n                autoplayTimer = null;\n            }\n            initAutoplay();\n        }\n        /**\n         * Navigation function\n         */\n        const isSliding = ref(false);\n        function slideTo(slideIndex) {\n            const currentVal = config.wrapAround\n                ? slideIndex\n                : getNumberInRange({\n                    val: slideIndex,\n                    max: maxSlideIndex.value,\n                    min: minSlideIndex.value,\n                });\n            if (currentSlideIndex.value === currentVal || isSliding.value) {\n                return;\n            }\n            emit('slide-start', {\n                slidingToIndex: slideIndex,\n                currentSlideIndex: currentSlideIndex.value,\n                prevSlideIndex: prevSlideIndex.value,\n                slidesCount: slidesCount.value,\n            });\n            isSliding.value = true;\n            prevSlideIndex.value = currentSlideIndex.value;\n            currentSlideIndex.value = currentVal;\n            transitionTimer = setTimeout(() => {\n                if (config.wrapAround) {\n                    const mappedNumber = mapNumberToRange({\n                        val: currentVal,\n                        max: maxSlideIndex.value,\n                        min: 0,\n                    });\n                    if (mappedNumber !== currentSlideIndex.value) {\n                        currentSlideIndex.value = mappedNumber;\n                        emit('loop', {\n                            currentSlideIndex: currentSlideIndex.value,\n                            slidingToIndex: slideIndex,\n                        });\n                    }\n                }\n                emit('update:modelValue', currentSlideIndex.value);\n                emit('slide-end', {\n                    currentSlideIndex: currentSlideIndex.value,\n                    prevSlideIndex: prevSlideIndex.value,\n                    slidesCount: slidesCount.value,\n                });\n                isSliding.value = false;\n                resetAutoplay();\n            }, config.transition);\n        }\n        function next() {\n            slideTo(currentSlideIndex.value + config.itemsToScroll);\n        }\n        function prev() {\n            slideTo(currentSlideIndex.value - config.itemsToScroll);\n        }\n        const nav = { slideTo, next, prev };\n        provide('nav', nav);\n        provide('isSliding', isSliding);\n        function restartCarousel() {\n            updateBreakpointsConfig();\n            updateSlidesData();\n            updateSlideSize();\n            resetAutoplay();\n        }\n        // Update the carousel on props change\n        watch(() => (Object.assign({}, props)), restartCarousel, { deep: true });\n        // Handle changing v-model value\n        watch(() => props['modelValue'], (val) => {\n            if (val === currentSlideIndex.value) {\n                return;\n            }\n            slideTo(Number(val));\n        });\n        // Handel when slides added/removed\n        watch(slidesCount, updateSlidesData);\n        // Init carousel\n        emit('before-init');\n        const data = {\n            config,\n            slidesCount,\n            slideSize,\n            currentSlide: currentSlideIndex,\n            maxSlide: maxSlideIndex,\n            minSlide: minSlideIndex,\n            middleSlide: middleSlideIndex,\n        };\n        expose({\n            updateBreakpointsConfig,\n            updateSlidesData,\n            updateSlideSize,\n            restartCarousel,\n            slideTo,\n            next,\n            prev,\n            nav,\n            data,\n        });\n        /**\n         * Track style\n         */\n        const trackTransform = computed(() => {\n            // Calculate the scrolled index with wrapping offset if applicable\n            const scrolledIndex = getScrolledIndex({\n                config,\n                currentSlide: currentSlideIndex.value,\n                slidesCount: slidesCount.value,\n            });\n            const cloneOffset = config.wrapAround ? slidesCount.value : 0;\n            // Determine direction multiplier for orientation\n            const isReverseDirection = ['rtl', 'btt'].includes(normalizeDir.value);\n            const directionMultiplier = isReverseDirection ? -1 : 1;\n            // Calculate the total offset for slide transformation\n            const totalOffset = (scrolledIndex + cloneOffset) * effectiveSlideSize.value * directionMultiplier;\n            // Include user drag interaction offset\n            const dragOffset = isVertical.value ? dragged.y : dragged.x;\n            // Generate the appropriate CSS transformation\n            const translateAxis = isVertical.value ? 'Y' : 'X';\n            return `translate${translateAxis}(${dragOffset - totalOffset}px)`;\n        });\n        const slotSlides = slots.default || slots.slides;\n        const slotAddons = slots.addons;\n        const slotsProps = reactive(data);\n        return () => {\n            if (!config.enabled) {\n                return h('section', {\n                    ref: root,\n                    class: ['carousel', 'is-disabled'],\n                }, slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides());\n            }\n            const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\n            slidesElements.forEach((el, index) => {\n                if (el.props) {\n                    el.props.index = index;\n                }\n                else {\n                    el.props = { index };\n                }\n            });\n            let output = slidesElements;\n            if (config.wrapAround) {\n                const slidesBefore = slidesElements.map((el, index) => cloneVNode(el, {\n                    index: -slidesElements.length + index,\n                    isClone: true,\n                    key: `clone-before-${index}`,\n                }));\n                const slidesAfter = slidesElements.map((el, index) => cloneVNode(el, {\n                    index: slidesElements.length + index,\n                    isClone: true,\n                    key: `clone-after-${index}`,\n                }));\n                output = [...slidesBefore, ...slidesElements, ...slidesAfter];\n            }\n            slides.value = slidesElements;\n            slidesCount.value = Math.max(slidesElements.length, 1);\n            const trackEl = h('ol', {\n                class: 'carousel__track',\n                style: {\n                    transform: trackTransform.value,\n                    transition: `${isSliding.value ? config.transition : 0}ms`,\n                    gap: `${config.gap}px`,\n                },\n                onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n                onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n            }, output);\n            const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl);\n            return h('section', {\n                ref: root,\n                class: [\n                    'carousel',\n                    `is-${normalizeDir.value}`,\n                    {\n                        'is-vertical': isVertical.value,\n                        'is-sliding': isSliding.value,\n                        'is-dragging': isDragging.value,\n                        'is-hover': isHover.value,\n                    },\n                ],\n                style: {\n                    '--vc-trk-height': `${typeof config.height === 'number' ? `${config.height}px` : config.height}`,\n                },\n                dir: normalizeDir.value,\n                'aria-label': config.i18n['ariaGallery'],\n                tabindex: '0',\n                onMouseenter: handleMouseEnter,\n                onMouseleave: handleMouseLeave,\n            }, [viewPortEl, addonsElements, h(ARIAComponent)]);\n        };\n    },\n});\n\nvar IconName;\n(function (IconName) {\n    IconName[\"arrowUp\"] = \"arrowUp\";\n    IconName[\"arrowDown\"] = \"arrowDown\";\n    IconName[\"arrowRight\"] = \"arrowRight\";\n    IconName[\"arrowLeft\"] = \"arrowLeft\";\n})(IconName || (IconName = {}));\nconst icons = {\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n};\n\nfunction isIconName(candidate) {\n    return candidate in IconName;\n}\nconst Icon = (props) => {\n    const config = inject('config', reactive(Object.assign({}, DEFAULT_CONFIG)));\n    const iconName = String(props.name);\n    const iconI18n = `icon${iconName.charAt(0).toUpperCase() + iconName.slice(1)}`;\n    if (!iconName || typeof iconName !== 'string' || !isIconName(iconName)) {\n        return;\n    }\n    const path = icons[iconName];\n    const pathEl = h('path', { d: path });\n    const iconTitle = config.i18n[iconI18n] || props.title || iconName;\n    const titleEl = h('title', iconTitle);\n    return h('svg', {\n        class: 'carousel__icon',\n        viewBox: '0 0 24 24',\n        role: 'img',\n        'aria-label': iconTitle,\n    }, [titleEl, pathEl]);\n};\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\n    const { next: slotNext, prev: slotPrev } = slots || {};\n    const config = inject('config', reactive(Object.assign({}, DEFAULT_CONFIG)));\n    const maxSlide = inject('maxSlide', ref(1));\n    const minSlide = inject('minSlide', ref(1));\n    const normalizeDir = inject('normalizeDir', ref('ltr'));\n    const currentSlide = inject('currentSlide', ref(1));\n    const nav = inject('nav', {});\n    const { wrapAround, i18n } = config;\n    const getPrevIcon = () => {\n        const directionIcons = {\n            ltr: 'arrowLeft',\n            rtl: 'arrowRight',\n            ttb: 'arrowUp',\n            btt: 'arrowDown',\n        };\n        return directionIcons[normalizeDir.value];\n    };\n    const getNextIcon = () => {\n        const directionIcons = {\n            ltr: 'arrowRight',\n            rtl: 'arrowLeft',\n            ttb: 'arrowDown',\n            btt: 'arrowUp',\n        };\n        return directionIcons[normalizeDir.value];\n    };\n    const prevButton = h('button', {\n        type: 'button',\n        class: [\n            'carousel__prev',\n            !wrapAround && currentSlide.value <= minSlide.value && 'carousel__prev--disabled',\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\n        ],\n        'aria-label': i18n['ariaPreviousSlide'],\n        title: i18n['ariaPreviousSlide'],\n        onClick: nav.prev,\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: getPrevIcon() }));\n    const nextButton = h('button', {\n        type: 'button',\n        class: [\n            'carousel__next',\n            !wrapAround && currentSlide.value >= maxSlide.value && 'carousel__next--disabled',\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\n        ],\n        'aria-label': i18n['ariaNextSlide'],\n        title: i18n['ariaNextSlide'],\n        onClick: nav.next,\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: getNextIcon() }));\n    return [prevButton, nextButton];\n};\n\nconst Pagination = () => {\n    const config = inject('config', reactive(Object.assign({}, DEFAULT_CONFIG)));\n    const maxSlide = inject('maxSlide', ref(1));\n    const minSlide = inject('minSlide', ref(1));\n    const currentSlide = inject('currentSlide', ref(1));\n    const nav = inject('nav', {});\n    const isActive = (slide) => mapNumberToRange({\n        val: currentSlide.value,\n        max: maxSlide.value,\n        min: 0,\n    }) === slide;\n    const children = [];\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\n        const buttonLabel = i18nFormatter(config.i18n['ariaNavigateToSlide'], {\n            slideNumber: slide + 1,\n        });\n        const button = h('button', {\n            type: 'button',\n            class: {\n                'carousel__pagination-button': true,\n                'carousel__pagination-button--active': isActive(slide),\n            },\n            'aria-label': buttonLabel,\n            title: buttonLabel,\n            onClick: () => nav.slideTo(slide),\n        });\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\n        children.push(item);\n    }\n    return h('ol', { class: 'carousel__pagination' }, children);\n};\n\nvar Slide = defineComponent({\n    name: 'CarouselSlide',\n    props: {\n        index: {\n            type: Number,\n            default: 1,\n        },\n        isClone: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    setup(props, { slots }) {\n        const config = inject('config', reactive(Object.assign({}, DEFAULT_CONFIG)));\n        const currentSlide = inject('currentSlide', ref(0));\n        const slidesToScroll = inject('slidesToScroll', ref(0));\n        const isSliding = inject('isSliding', ref(false));\n        const isVertical = inject('isVertical', ref(false));\n        const slideSize = inject('slideSize', ref(0));\n        const isActive = computed(() => props.index === currentSlide.value);\n        const isPrev = computed(() => props.index === currentSlide.value - 1);\n        const isNext = computed(() => props.index === currentSlide.value + 1);\n        const isVisible = computed(() => {\n            const min = Math.floor(slidesToScroll.value);\n            const max = Math.ceil(slidesToScroll.value + config.itemsToShow - 1);\n            return props.index >= min && props.index <= max;\n        });\n        const slideStyle = computed(() => {\n            const dimension = config.gap\n                ? `${slideSize.value}px`\n                : `${100 / config.itemsToShow}%`;\n            return isVertical.value\n                ? { height: dimension, width: '' }\n                : { width: dimension, height: '' };\n        });\n        return () => {\n            var _a, _b;\n            if (!config.enabled) {\n                return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n            }\n            return h('li', {\n                style: slideStyle.value,\n                class: {\n                    carousel__slide: true,\n                    'carousel__slide--clone': props.isClone,\n                    'carousel__slide--visible': isVisible.value,\n                    'carousel__slide--active': isActive.value,\n                    'carousel__slide--prev': isPrev.value,\n                    'carousel__slide--next': isNext.value,\n                    'carousel__slide--sliding': isSliding.value,\n                },\n                'aria-hidden': !isVisible.value,\n            }, (_b = slots.default) === null || _b === void 0 ? void 0 : _b.call(slots, {\n                isActive: isActive.value,\n                isClone: props.isClone,\n                isPrev: isPrev.value,\n                isNext: isNext.value,\n                isSliding: isSliding.value,\n                isVisible: isVisible.value,\n            }));\n        };\n    },\n});\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n"],
  "mappings": "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",
  "names": ["_a", "IconName"]
}
